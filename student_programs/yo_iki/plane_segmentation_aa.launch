<launch>
  <arg name="INPUT" default="/AizuSpiderAA/ARM_CAMERA/points" />
  <arg name="FRAME" default="AizuSpiderAA/ARM_CAMERA" />

  <arg name="manager" default="object_detector_nodelet_manager" />
  <arg name="launch_manager" default="true" />

  <node name="$(arg manager)" pkg="nodelet" type="nodelet" args="manager"
        if="$(arg launch_manager)" output="screen" />

  <node name="multi_plane_estimate" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/OrganizedMultiPlaneSegmentation $(arg manager)"
        output="screen" >
    <remap from="~input" to="$(arg INPUT)" />
    <rosparam>
      max_curvature: 0.01
      estimate_normal: true
    </rosparam>
  </node>

  <node name="plane_extraction" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/MultiPlaneExtraction $(arg manager)"
        output="screen" >
    <remap from="~input" to="$(arg INPUT)" />
    <remap from="~indices"
           to="/multi_plane_estimate/output_refined" />
    <remap from="~input_polygons"
           to="/multi_plane_estimate/output_refined_polygon" />
    <remap from="~input_coefficients"
           to="/multi_plane_estimate/output_refined_coefficients" />
    <rosparam subst_value="true">
      use_sensor_frame: true
      sensor_frame: $(arg FRAME)
      min_height: 0.03
    </rosparam>
  </node>

  <node name="euclidean_clustering" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/EuclideanClustering $(arg manager)"
        output="screen" >
    <remap from="~input" to="/plane_extraction/output" />
    <rosparam>
      tolerance: 0.02
      min_size: 100
    </rosparam>
  </node>


  <node name="cluster_point_indices_decomposer"
        pkg="jsk_pcl_ros" type="cluster_point_indices_decomposer">
    <remap from="~input" to="/plane_extraction/output" />
    <remap from="~target" to="/euclidean_clustering/output" />
    <rosparam>
      approximate_sync: true
      queue_size: 200
      use_pca: true
      align_boxes: true
      align_boxes_with_plane: false
      target_frame_id: AizuSpiderAA/CHASSIS
    </rosparam>
  </node>
</launch>
